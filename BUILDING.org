* Requirements

You will need to have [[https://nixos.org/nix/][nix]] installed on your computer
to follow most of the instructions on this page.

* Updating the nix build

Funflow uses a nix build based on
[[https://github.com/input-output-hk/haskell.nix][haskell.nix]] for CI. 

If you make changes to the dependencies through modifying the `stack.yaml` or
individual `.cabal` files, then you will need to regenerate the nix
configuration by calling 

#+BEGIN_EXAMPLE
./nix/regenerate.sh
#+END_EXAMPLE

If you make major changes, such as updating the stackage resolver, you may need
to move to a newer version of nixpkgs and the haskell.nix tooling:

#+BEGIN_EXAMPLE
./nix/update-nixpkgs.sh
./nix/regenerate.sh
#+END_EXAMPLE

* Using the nix build locally

To use the nix build locally (for example, to test that CI will succeed), we
recommend that you make use of [[https://cachix.org/][cachix]]. This will speed
up your builds by allowing you to use the Tweag cache.

Once you have installed cachix, configure it to use the Tweag cache (you may
have to follow the instrcutions given upon executing the following command !):

#+BEGIN_EXAMPLE
cachix use tweag
#+END_EXAMPLE

** Running the CI build

You can then run the CI build with the following command:

#+BEGIN_EXAMPLE
nix-build nix/ci.nix -A required-packages
#+END_EXAMPLE

You can run the tests in a similar way:

#+BEGIN_EXAMPLE
nix-build nix/ci.nix -A required-tests
#+END_EXAMPLE
